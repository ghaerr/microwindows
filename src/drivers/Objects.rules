##############################################################################
# Microwindows Makefile
# Copyright (c) 2000, 2010 Martin Jolicoeur, Greg Haerr
# Portions Copyright (c) 2002 Koninklijke Philips Electronics N.V.
#
# This makefile adds the driver object files to the MW_CORE_OBJS variable.
# It does not define any targets.
#
# This makefile is only intended to be included from other makefiles.
##############################################################################

# subdrivers always linked in
MW_SUBDRIVER_OBJS += \
	$(MW_DIR_OBJ)/drivers/fblin8.o \
	$(MW_DIR_OBJ)/drivers/fblin16.o \
	$(MW_DIR_OBJ)/drivers/fblin24.o \
	$(MW_DIR_OBJ)/drivers/fblin32.o \
	$(MW_DIR_OBJ)/drivers/genmem.o \
	$(MW_DIR_OBJ)/drivers/fb.o \
	$(MW_DIR_OBJ)/drivers/fbportrait_left.o \
	$(MW_DIR_OBJ)/drivers/fbportrait_right.o \
	$(MW_DIR_OBJ)/drivers/fbportrait_down.o
ifeq ($(FBREVERSE), Y)
ifeq ($(IPOD_LCD), Y)
  MW_SUBDRIVER_OBJS += $(MW_DIR_OBJ)/drivers/fblin1rev.o $(MW_DIR_OBJ)/drivers/fblin2revipod.o
else
  MW_SUBDRIVER_OBJS += $(MW_DIR_OBJ)/drivers/fblin1rev.o $(MW_DIR_OBJ)/drivers/fblin2rev.o
endif
else
  MW_SUBDRIVER_OBJS += $(MW_DIR_OBJ)/drivers/fblin1.o
  MW_SUBDRIVER_OBJS += $(MW_DIR_OBJ)/drivers/fblin2.o
  MW_SUBDRIVER_OBJS += $(MW_DIR_OBJ)/drivers/rasterops.o
endif

ifeq ($(FBREVERSE), Y)
  MW_SUBDRIVER_OBJS += $(MW_DIR_OBJ)/drivers/fblin4rev.o
else
ifeq ($(SA1100_LCD_LTLEND), Y)
  MW_SUBDRIVER_OBJS += $(MW_DIR_OBJ)/drivers/fblin4sa1100.o
else
  MW_SUBDRIVER_OBJS += $(MW_DIR_OBJ)/drivers/fblin4.o
endif
endif

# genfont.c compiles with no fonts with -DNOFONTS=1
MW_SUBDRIVER_OBJS += $(MW_DIR_OBJ)/drivers/genfont.o

# framebuffer driver stuff
ifeq ($(FRAMEBUFFER), Y)
MW_CORE_OBJS += $(MW_SUBDRIVER_OBJS)

ifeq ($(ARCH), ECOS)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/scr_ecos.o
else
ifeq ($(ARCH), RTEMS)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/scr_rtems.o $(MW_DIR_OBJ)/drivers/deprecated/romfont.o
else
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/scr_fb.o
endif
endif

ifeq ($(VTSWITCH), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/vtswitch.o
endif

endif # FRAMEBUFFER

# X11
ifeq ($(X11), Y)
MW_CORE_OBJS += $(MW_SUBDRIVER_OBJS)
MW_CORE_OBJS += \
	$(MW_DIR_OBJ)/drivers/scr_x11.o \
	$(MW_DIR_OBJ)/drivers/mou_x11.o \
	$(MW_DIR_OBJ)/drivers/kbd_x11.o
endif

# X11 overrides all other drivers
ifneq ($(X11), Y)


# memory screen device
ifeq ($(SCRMEM), Y)
MW_CORE_OBJS += $(MW_SUBDRIVER_OBJS)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/scr_mem.o
endif

# NULL
ifeq ($(NOSCR), Y)
MW_CORE_OBJS += $(MW_SUBDRIVER_OBJS)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/scr_null.o
endif

ifeq ($(EM8400), Y)
MW_CORE_OBJS += $(MW_SUBDRIVER_OBJS)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/scr_em84xx.o
endif

ifeq ($(HAVE_VNCSERVER_SUPPORT), Y)
MW_CORE_OBJS += $(MW_SUBDRIVER_OBJS)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/vncserver.o
endif

### Desktop GPM mouse driver
ifeq ($(GPMMOUSE), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_gpm.o
endif

### Desktop DEVMICE mouse driver
ifeq ($(DEVMICEMOUSE), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_devmice.o
endif

### serial mouse driver
ifeq ($(SERMOUSE), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_ser.o
endif

### Generic touchscreen driver
ifeq ($(ADSMOUSE), Y)
CFLAGS += -DTOUCHSCREEN_ADS=1
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_touchscreen.o
endif

ifeq ($(ADS7846MOUSE), Y)
CFLAGS += -DTOUCHSCREEN_ADS7846=1
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_touchscreen.o
endif

ifeq ($(EVENTMOUSE), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_event.o
endif

ifeq ($(IPAQMOUSE), Y)
CFLAGS += -DTOUCHSCREEN_IPAQ=1
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_touchscreen.o
endif

ifeq ($(TUXMOUSE), Y)
CFLAGS += -DTOUCHSCREEN_TUXSCREEN=1
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_touchscreen.o
endif

ifeq ($(ZAURUSMOUSE), Y)
CFLAGS += -DTOUCHSCREEN_ZAURUS=1
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_touchscreen.o
endif

ifeq ($(TTMOUSE), Y)
CFLAGS += -DTOUCHSCREEN_TOMTOM=1
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/ttmouse_init.o $(MW_DIR_OBJ)/drivers/mou_touchscreen.o
endif

### Embedded Planet touchscreen
ifeq ($(EPMOUSE), Y)
CFLAGS += -DTOUCHSCREEN_EPLANET
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_vrlinux.o
endif

### Vtech Helio touchscreen
ifeq ($(VHMOUSE), Y)
CFLAGS += -DTOUCHSCREEN_HELIO=1
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_vrlinux.o
endif

#### Yopy touchscreen
ifeq ($(YOPYMOUSE), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_yopy.o
endif

#### Psion 5 touchscreen
ifeq ($(PSIONMOUSE), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_ps5.o
endif

#### NEC Harrier touchscreen
ifeq ($(HARRIERMOUSE), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_harrier.o
endif

#### MicroTouch serial touchscreen
ifeq ($(MTMOUSE), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_mt.o
endif

ifeq ($(SUNMOUSE), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_sun.o
endif

ifeq ($(ARCH), FREEBSD-X86)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_fbsd.o
endif

### tslib touchscreen driver
ifeq ($(TSLIBMOUSE), Y)
LDFLAGS += -lts
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_tslib.o
endif

ifeq ($(NOMOUSE), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_null.o
endif

#
# Keyboard driver specific for every system
#
ifeq ($(TTYKBD), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/kbd_tty.o
endif

ifeq ($(IPAQKBD), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/kbd_ipaq.o
endif

ifeq ($(ZAURUSKBD),Y)
CFLAGS += -DKBD_ZAURUS=1
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/kbd_ttyscan.o
endif

ifeq ($(SCANKBD), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/kbd_ttyscan.o
endif

ifeq ($(EVENTKBD), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/kbd_event.o
endif

ifeq ($(ARCH), FREEBSD-X86)
#MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/kbd_fbsd.o
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/kbd_tty.o
endif

ifeq ($(LIRCKBD), Y)
MW_CORE_OBJS += \
	$(MW_DIR_OBJ)/drivers/mwlirc.o \
	$(MW_DIR_OBJ)/drivers/kbd_lirc.o
endif

ifeq ($(NOKBD), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/kbd_null.o
endif

ifeq ($(PIPEKBD), Y)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/kbd_pipe.o
endif

ifeq ($(LIRCKBD2), Y)
MW_CORE_OBJS += \
	$(MW_DIR_OBJ)/drivers/mwlirc.o \
	$(MW_DIR_OBJ)/drivers/kbd_lirc.o
endif

ifeq ($(ARCH), RTEMS)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/kbd_rtems.o
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_rtems.o
endif # RTEMS architecture

# Nintendo DS
ifeq ($(SCRNDS), Y)
MW_CORE_OBJS += $(MW_SUBDRIVER_OBJS)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/scr_nds.o
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_nds.o
endif

# PSP
ifeq ($(ARCH), PSP)
MW_CORE_OBJS += $(MW_SUBDRIVER_OBJS)
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/scr_psp.o
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/mou_psp.o
MW_CORE_OBJS += $(MW_DIR_OBJ)/drivers/kbd_psp.o
endif

# ALLEGRO
ifeq ($(ALLEGRO5), Y)
MW_CORE_OBJS += $(MW_SUBDRIVER_OBJS)
MW_CORE_OBJS += \
	$(MW_DIR_OBJ)/drivers/scr_allegro5.o \
	$(MW_DIR_OBJ)/drivers/mou_allegro5.o \
	$(MW_DIR_OBJ)/drivers/kbd_allegro5.o
endif
ifeq ($(ALLEGRO4), Y)
MW_CORE_OBJS += $(MW_SUBDRIVER_OBJS)
MW_CORE_OBJS += \
	$(MW_DIR_OBJ)/drivers/scr_allegro.o \
	$(MW_DIR_OBJ)/drivers/mou_allegro.o \
	$(MW_DIR_OBJ)/drivers/kbd_allegro.o
endif

ifeq ($(SDL1), Y)
MW_CORE_OBJS += $(MW_SUBDRIVER_OBJS)
MW_CORE_OBJS += \
	$(MW_DIR_OBJ)/drivers/scr_sdl1.o \
	$(MW_DIR_OBJ)/drivers/mou_sdl1.o \
	$(MW_DIR_OBJ)/drivers/kbd_sdl1.o
endif

ifeq ($(SDL2), Y)
MW_CORE_OBJS += $(MW_SUBDRIVER_OBJS)
MW_CORE_OBJS += \
	$(MW_DIR_OBJ)/drivers/scr_sdl2.o \
	$(MW_DIR_OBJ)/drivers/mou_sdl2.o \
	$(MW_DIR_OBJ)/drivers/kbd_sdl2.o
endif

endif # X11
